// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
// –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–∞ —Å–∫—Ä–∏–ø—Ç–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ public

import { spawn } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootDir = path.resolve(__dirname, '..');

const CMC_API_KEY = 'ef30cb6d6bd148e6960f80419729df0b';
const COINGECKO_API_KEY = 'CG-dyYHCWcC3Vcvt3PPYPjmmDLf';

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å –≤—ã–≤–æ–¥–æ–º –≤ –∫–æ–Ω—Å–æ–ª—å
function runScript(command, args) {
  return new Promise((resolve, reject) => {
    const child = spawn(command, args, { 
      cwd: rootDir,
      stdio: 'inherit' // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–≤–æ–¥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    });

    child.on('close', (code) => {
      if (code !== 0) {
        reject(new Error(`Script exited with code ${code}`));
      } else {
        resolve();
      }
    });

    child.on('error', reject);
  });
}

async function updateData() {
  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã Binance Alpha –Ω–∞ BNB Chain
    console.log('üì• –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã Binance Alpha –Ω–∞ BNB Chain...\n');
    await runScript('node', ['1-get-binance-alpha-bnb.js', CMC_API_KEY]);
    console.log('\n‚úÖ –¢–æ–∫–µ–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã\n');

    // –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ CoinGecko API –∏ CMC API v2
    console.log('üîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ CoinGecko –∏ CMC API...');
    console.log('   –≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 5 –º–∏–Ω—É—Ç...\n');
    await runScript('node', ['2-verify-with-coingecko.js', COINGECKO_API_KEY, CMC_API_KEY]);
    console.log('\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n');

    // –®–∞–≥ 3: –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ public –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    console.log('üìã –®–∞–≥ 3: –ö–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ...');
    const sourceFile = path.join(rootDir, 'verified-bnb-only-coingecko.json');
    const publicDir = path.join(rootDir, 'public');
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É public –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if (!fs.existsSync(publicDir)) {
      fs.mkdirSync(publicDir, { recursive: true });
    }
    
    const destFile = path.join(publicDir, 'verified-bnb-only-coingecko.json');
    fs.copyFileSync(sourceFile, destFile);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ public/\n');

    console.log('üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${destFile}`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  }
}

updateData();
